-- Arquivo: 01_criacao_banco.sql
-- Criação do Banco de Dados
CREATE DATABASE ecommerce_db;
GO

USE ecommerce_db;
GO

-- Tabela ENDEREÇO (base para outras tabelas)
CREATE TABLE ENDERECO (
    idENDERECO INT PRIMARY KEY IDENTITY(1,1),
    logradouro VARCHAR(100) NOT NULL,
    numero VARCHAR(10) NOT NULL,
    complemento VARCHAR(50),
    bairro VARCHAR(50) NOT NULL,
    cidade VARCHAR(50) NOT NULL,
    estado CHAR(2) NOT NULL,
    cep CHAR(8) NOT NULL,
    data_cadastro DATETIME DEFAULT GETDATE()
);

-- Tabela FORMA_DE_PAGAMENTO
CREATE TABLE FORMA_DE_PAGAMENTO (
    idFORMA_DE_PAGAMENTO INT PRIMARY KEY IDENTITY(1,1),
    descricao VARCHAR(50) NOT NULL,
    tipo VARCHAR(20) NOT NULL CHECK (tipo IN ('Crédito', 'Débito', 'PIX', 'Boleto', 'Transferência')),
    ativo BIT DEFAULT 1,
    taxa DECIMAL(5,2) DEFAULT 0.00,
    data_cadastro DATETIME DEFAULT GETDATE()
);

-- Tabela CLIENTE (base)
CREATE TABLE CLIENTE (
    idCLIENTE INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE,
    telefone VARCHAR(20),
    ENDERECO_idENDERECO INT NOT NULL FOREIGN KEY REFERENCES ENDERECO(idENDERECO),
    data_cadastro DATETIME DEFAULT GETDATE(),
    ativo BIT DEFAULT 1
);

-- Tabelas específicas para PJ/PF
CREATE TABLE CLIENTE_PF (
    idCLIENTE_PF INT PRIMARY KEY IDENTITY(1,1),
    idCLIENTE INT UNIQUE FOREIGN KEY REFERENCES CLIENTE(idCLIENTE),
    CPF VARCHAR(11) UNIQUE NOT NULL,
    rg VARCHAR(20),
    data_nascimento DATE,
    genero CHAR(1) CHECK (genero IN ('M', 'F', 'O'))
);

CREATE TABLE CLIENTE_PJ (
    idCLIENTE_PJ INT PRIMARY KEY IDENTITY(1,1),
    idCLIENTE INT UNIQUE FOREIGN KEY REFERENCES CLIENTE(idCLIENTE),
    CNPJ VARCHAR(14) UNIQUE NOT NULL,
    razao_social VARCHAR(100) NOT NULL,
    nome_fantasia VARCHAR(100),
    inscricao_estadual VARCHAR(20)
);

-- Tabela para múltiplas formas de pagamento por cliente
CREATE TABLE CLIENTE_FORMA_PAGAMENTO (
    idCLIENTE INT FOREIGN KEY REFERENCES CLIENTE(idCLIENTE),
    idFORMA_DE_PAGAMENTO INT FOREIGN KEY REFERENCES FORMA_DE_PAGAMENTO(idFORMA_DE_PAGAMENTO),
    preferencia INT DEFAULT 1,
    data_ultimo_uso DATETIME,
    PRIMARY KEY (idCLIENTE, idFORMA_DE_PAGAMENTO)
);

-- Tabela VENDEDOR
CREATE TABLE VENDEDOR (
    idVENDEDOR INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE,
    telefone VARCHAR(20),
    ENDERECO_idENDERECO INT FOREIGN KEY REFERENCES ENDERECO(idENDERECO),
    tipo CHAR(2) CHECK (tipo IN ('PF', 'PJ')),
    identificacao VARCHAR(14) NOT NULL,
    data_cadastro DATETIME DEFAULT GETDATE(),
    ativo BIT DEFAULT 1
);

-- Tabela FORNECEDOR
CREATE TABLE FORNECEDOR (
    idFORNECEDOR INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    CNPJ VARCHAR(14) UNIQUE NOT NULL,
    email VARCHAR(100),
    telefone VARCHAR(20),
    ENDERECO_idENDERECO INT FOREIGN KEY REFERENCES ENDERECO(idENDERECO),
    ramo_atuacao VARCHAR(50),
    data_cadastro DATETIME DEFAULT GETDATE(),
    ativo BIT DEFAULT 1
);

-- Tabela PLATAFORMA
CREATE TABLE PLATAFORMA (
    idPLATAFORMA INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(50) NOT NULL,
    url VARCHAR(100),
    taxa_comissao DECIMAL(5,2) DEFAULT 0.00,
    data_cadastro DATETIME DEFAULT GETDATE(),
    ativo BIT DEFAULT 1
);

-- Tabela CATEGORIA_PRODUTO
CREATE TABLE CATEGORIA_PRODUTO (
    idCATEGORIA INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(50) NOT NULL,
    descricao VARCHAR(200),
    categoria_pai INT FOREIGN KEY REFERENCES CATEGORIA_PRODUTO(idCATEGORIA)
);
-- Tabela PRODUTO
CREATE TABLE PRODUTO (
    idPRODUTO INT PRIMARY KEY IDENTITY(1,1),
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10,2) NOT NULL,
    preco_custo DECIMAL(10,2),
    FORNECEDOR_idFORNECEDOR INT NOT NULL FOREIGN KEY REFERENCES FORNECEDOR(idFORNECEDOR),
    CATEGORIA_idCATEGORIA INT FOREIGN KEY REFERENCES CATEGORIA_PRODUTO(idCATEGORIA),
    data_cadastro DATETIME DEFAULT GETDATE()
);

-- Tabela PEDIDO
CREATE TABLE PEDIDO (
    idPEDIDO INT PRIMARY KEY IDENTITY(1,1),
    data_pedido DATETIME DEFAULT GETDATE(),
    status VARCHAR(20) NOT NULL CHECK (status IN ('Aguardando pagamento', 'Processando', 'Enviado', 'Entregue', 'Cancelado')),
    valor_total DECIMAL(10,2) NOT NULL,
    CLIENTE_idCLIENTE INT NOT NULL FOREIGN KEY REFERENCES CLIENTE(idCLIENTE),
    FORMA_PAGAMENTO_idFORMA_DE_PAGAMENTO INT FOREIGN KEY REFERENCES FORMA_DE_PAGAMENTO(idFORMA_DE_PAGAMENTO)
);

-- Tabela ENTREGA (melhorada)
CREATE TABLE ENTREGA (
    idENTREGA INT PRIMARY KEY IDENTITY(1,1),
    PEDIDO_idPEDIDO INT UNIQUE FOREIGN KEY REFERENCES PEDIDO(idPEDIDO),
    status VARCHAR(20) NOT NULL CHECK (status IN ('Preparando', 'Despachado', 'Em trânsito', 'Entregue', 'Devolvido')),
    codigo_rastreio VARCHAR(50),
    data_envio DATETIME,
    data_entrega_prevista DATETIME,
    data_entrega_real DATETIME
);

-- Tabelas de relacionamento que faltam
CREATE TABLE PEDIDO_PRODUTO (
    PEDIDO_idPEDIDO INT FOREIGN KEY REFERENCES PEDIDO(idPEDIDO),
    PRODUTO_idPRODUTO INT FOREIGN KEY REFERENCES PRODUTO(idPRODUTO),
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (PEDIDO_idPEDIDO, PRODUTO_idPRODUTO)
);

CREATE TABLE ESTOQUE (
    idESTOQUE INT PRIMARY KEY IDENTITY(1,1),
    local VARCHAR(100) NOT NULL
);

CREATE TABLE ESTOQUE_PRODUTO (
    ESTOQUE_idESTOQUE INT FOREIGN KEY REFERENCES ESTOQUE(idESTOQUE),
    PRODUTO_idPRODUTO INT FOREIGN KEY REFERENCES PRODUTO(idPRODUTO),
    quantidade INT NOT NULL DEFAULT 0,
    PRIMARY KEY (ESTOQUE_idESTOQUE, PRODUTO_idPRODUTO)
);

CREATE TABLE PRODUTO_PLATAFORMA (
    PRODUTO_idPRODUTO INT FOREIGN KEY REFERENCES PRODUTO(idPRODUTO),
    PLATAFORMA_idPLATAFORMA INT FOREIGN KEY REFERENCES PLATAFORMA(idPLATAFORMA),
    link VARCHAR(200),
    PRIMARY KEY (PRODUTO_idPRODUTO, PLATAFORMA_idPLATAFORMA)
);
